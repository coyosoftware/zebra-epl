# encoding: utf-8
require 'spec_helper'

describe Zebra::Epl::Image do
  it "can be initialized with the position of the image to be printed" do
    image = described_class.new position: [20, 40]
    image.position.should == [20,40]
    image.x.should == 20
    image.y.should == 40
  end

  it "can be initialized with the data to be printed" do
    data = "foobar"
    text = described_class.new data: data
    text.data.should == data
  end

  describe "#to_epl" do
    subject(:image) { described_class.new position: [100, 150], data: File.open(File.join(Dir.pwd, 'spec', 'support', 'biohazard.pcx')) }
    let(:tokens) { image.to_epl.split(",") }

    it "raises an error if the X position was not informed" do
      image = described_class.new position: [nil, 100], data: "foobar"
      expect {
        image.to_epl
      }.to raise_error(Zebra::Epl::Printable::MissingAttributeError, "Can't print if the X value is not given")
    end

    it "raises an error if the Y position was not informed" do
      image = described_class.new position: [100, nil]
      expect {
        image.to_epl
      }.to raise_error(Zebra::Epl::Printable::MissingAttributeError, "Can't print if the Y value is not given")
    end

    it "raises an error if the data to be printed was not informed" do
      image.data = nil
      expect {
        image.to_epl
      }.to raise_error(Zebra::Epl::Printable::MissingAttributeError, "Can't print if the data to be printed is not given")
    end

    it 'raises an error if the data is not a file' do
      image.data = 'foobar'
      expect {
        image.to_epl
      }.to raise_error(Zebra::Epl::Printable::MissingAttributeError, "Can't print if the data to be printed is not a file")
    end

    it 'raises an error if the data is not a PCX image' do
      image.data = Tempfile.new('foo.png')
      expect {
        image.to_epl
      }.to raise_error(Zebra::Epl::Printable::MissingAttributeError, "Can't print if the data to be printed is not a PCX image")
    end

    it "begins with the 'GW' command" do
      image.to_epl.should =~ /\AGW/
    end

    it "contains the X position" do
      tokens[0].match(/(\d+)/)[1].should eq "100"
    end

    it "contains the Y position" do
      tokens[1].should eq "150"
    end

    it "contains the image width" do
      tokens[2].should eq "15"
    end

    it "contains the image length" do
      tokens[3].should eq "120"
    end

    it "contains the image data" do
      tokens[4].bytes.should eq
    end
  end
end
